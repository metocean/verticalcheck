// Generated by CoffeeScript 1.7.1
(function() {
  var CSON, arg, args, config, fs, i, isInteractive, result, results, usage, waserror, _i, _len;

  require('colors');

  args = process.argv.slice(2);

  usage = "\n   Usage: " + 'verticalcheck'.cyan + " [config]\n   \n   Default configuration is " + 'verticalcheck.cson'.blue + "\n   \n   File format:\n   \n   [\n     {\n       dns:\n         'google.co.nz': '131.203.3.177'\n       ping: [\n         'google.co.nz'\n       ]\n       http: [\n         'https://google.co.nz/': 200\n       ]\n     }\n   ]\n";

  isInteractive = true;

  for (i = _i = 0, _len = args.length; _i < _len; i = ++_i) {
    arg = args[i];
    if (arg === '--json') {
      isInteractive = false;
      args.splice(i);
      break;
    }
  }

  if (args.length > 1) {
    console.error(usage);
    process.exit(1);
  }

  config = 'verticalcheck.cson';

  if (args.length === 1) {
    config = args[0];
  }

  fs = require('fs');

  if (!fs.existsSync(config)) {
    console.error("\nConfiguration not found at '" + config + "'\n");
    process.exit(1);
  }

  CSON = require('cson');

  config = CSON.parseFileSync(config);

  waserror = false;

  results = [];

  result = function(task, check, isUp, param, message) {
    if (!isInteractive) {
      return results.push({
        name: task.name,
        check: check,
        isUp: isUp,
        param: param,
        message: message
      });
    }
    if (isUp) {
      return console.log(" " + '↑'.green + " " + message.green);
    }
    waserror = true;
    return console.error(" " + '↓'.red + " " + message.red);
  };

  if (!isInteractive) {
    return require('../library')(config, result, function() {
      return console.log(JSON.stringify(results, null, 2));
    });
  }

  console.log();

  console.log("   " + 'Vertical Check'.cyan + " -- Are you up or down?");

  console.log();

  require('../library')(config, result, function() {
    if (waserror) {
      console.error();
      console.error('   fin with errors.'.red);
      console.error();
      process.exit(1);
    }
    console.log();
    console.log('   fin.'.green);
    return console.log();
  });

}).call(this);
