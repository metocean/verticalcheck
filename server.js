// Generated by CoffeeScript 1.7.1
(function() {
  var CSON, calculatedTime, config, files, fs, http, result, results, route, server, verticalcheck;

  fs = require('fs');

  http = require('http');

  files = [];

  route = function(url, contentType, content) {
    return files.push({
      u: url,
      t: contentType,
      c: content
    });
  };

  route('/', 'text/html', 'index.html');

  route('/favicon.ico', 'image/x-icon', 'favicon.ico');

  route('/style.css', 'text/css', 'style.css');

  route('/script.js', 'application/javascript', 'script.js');

  CSON = require('cson');

  config = CSON.parseFileSync('verticalcheck.cson');

  results = null;

  calculatedTime = 0;

  result = function(task, check, isUp, param, message, explanation) {
    return results.push({
      name: task.name,
      check: check,
      isUp: isUp,
      param: param,
      message: message,
      explanation: explanation
    });
  };

  verticalcheck = function(cb) {
    var currentTime;
    currentTime = new Date().getTime();
    if (currentTime < calculatedTime + 5 * 60 * 1000) {
      return cb();
    }
    calculatedTime = currentTime;
    results = [];
    return require('./library')(config, result, cb);
  };

  route('/api', function(req, res) {
    return verticalcheck(function() {
      res.writeHead(200, {
        'Content-Type': 'application/json'
      });
      return res.end(JSON.stringify(results));
    });
  });

  server = http.createServer(function(req, res) {
    var file, _i, _len;
    for (_i = 0, _len = files.length; _i < _len; _i++) {
      file = files[_i];
      if (file.u === req.url) {
        if (typeof file.t === 'function') {
          return file.t(req, res);
        }
        res.writeHead(200, {
          'Content-Type': file.t
        });
        res.end(fs.readFileSync(file.c));
        return;
      }
    }
    res.writeHead(404, {
      'Content-Type': 'text/plain'
    });
    return res.end('404 - Goneburgers');
  });

  server.listen(1234);

  console.log('Home grown http server running on port 1234');

}).call(this);
